syntax = "proto3";

package serverpb;

option go_package = "./;serverpb";

import "google/protobuf/empty.proto";

enum RaftLogCommand {
  SetWithTTL = 0;
  TrySetWithTTL = 1;
  Set = 2;
  TrySet = 3;
  Del = 4;
}

enum RaftState {
  follower = 0;
  candidate = 1;
  leader = 2;
  shutdown = 3;
  unknown = 4;
}

message RaftLogPayload {
  RaftLogCommand command = 1;
  bytes key = 2;
  optional bytes value = 3;
  optional uint32 ttl = 4;
  optional string namespace = 5;
}

message AppendClusterRequest {
  string server_id = 1;
  string peer_addr = 2;
  bool voter = 3;
}

message AppendClusterResponse {}

message LeaderMonitorRequest {}
message LeaderMonitorResponse {
  bool leader = 1;
}

message RaftStateRequest {}
message RaftStateResponse {
  RaftState state = 1;
}

message RaftSnapshotRequest {
  optional string path = 1;
}

service RedQueen {
  rpc AppendCluster(AppendClusterRequest) returns (AppendClusterResponse) {}
  rpc LeaderMonitor(LeaderMonitorRequest) returns (stream LeaderMonitorResponse) {}
  rpc RaftState(google.protobuf.Empty) returns (RaftStateResponse) {}
  rpc RaftSnapshot(RaftSnapshotRequest) returns (google.protobuf.Empty) {}
}